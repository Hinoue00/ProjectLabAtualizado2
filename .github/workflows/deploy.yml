name: LabConnect CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_labconnect
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Create test environment
      run: |
        echo "SECRET_KEY=test-secret-key-for-github-actions" > .env
        echo "DEBUG=True" >> .env
        echo "DATABASE_URL=postgres://postgres:postgres@localhost:5432/test_labconnect" >> .env
        
    - name: Run migrations
      run: |
        python manage.py migrate --settings=LabConnect.settings.development
        
    - name: Run tests
      run: |
        python manage.py test --settings=LabConnect.settings.development

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Debug deployment info
      run: |
        echo "🔍 Deploy Info:"
        echo "Branch: ${{ github.ref }}"
        echo "Event: ${{ github.event_name }}"
        echo "Commit: ${{ github.sha }}"
        echo "Actor: ${{ github.actor }}"
    
    - name: Deploy to Production Server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.PROD_HOST }}
        port: ${{ secrets.PROD_PORT }}
        username: ${{ secrets.PROD_USER }}
        key: ${{ secrets.PROD_SSH_KEY }}
        timeout: 300s
        command_timeout: 60s
        script: |
          set -e  # Exit on any error
          
          echo "🚀 Iniciando deploy automático..."
          echo "📅 Data/Hora: $(date)"
          echo "👤 Usuário: $(whoami)"
          echo "📂 Diretório atual: $(pwd)"
          
          # Ir para o diretório correto
          cd /home/labadm
          echo "📂 Mudando para: $(pwd)"
          
          # Verificar se o script existe
          if [ ! -f "./git-deploy.sh" ]; then
            echo "❌ Erro: git-deploy.sh não encontrado!"
            ls -la
            exit 1
          fi
          
          # Tornar o script executável (caso necessário)
          chmod +x ./git-deploy.sh
          
          # Executar o script de deploy existente
          echo "🔧 Executando git-deploy.sh..."
          ./git-deploy.sh
          
          echo "✅ Deploy concluído!"
          
          # Verificar se o serviço está rodando
          echo "🔍 Verificando status do serviço..."
          if sudo systemctl is-active --quiet labconnect; then
            echo "✅ Serviço LabConnect está ativo"
          else
            echo "⚠️ Serviço inativo. Reiniciando..."
            sudo systemctl start labconnect
            sleep 5
            
            # Verificar se o ngrok existe e iniciar
            if [ -f "./start-labconnect-ngrok.sh" ]; then
              chmod +x ./start-labconnect-ngrok.sh
              ./start-labconnect-ngrok.sh start
            else
              echo "⚠️ start-labconnect-ngrok.sh não encontrado"
            fi
          fi
          
          # Status final detalhado
          echo "📊 Status final:"
          sudo systemctl status labconnect --no-pager -l || echo "❌ Erro ao obter status"
          
          # Verificar se o processo está rodando
          echo "🔍 Processos LabConnect:"
          ps aux | grep -v grep | grep -i labconnect || echo "⚠️ Nenhum processo encontrado"
          
          echo "🎉 Deploy finalizado!"