from django.core.management.base import BaseCommand
from accounts.models import User

class Command(BaseCommand):
    help = 'Verifica se existem t√©cnicos aprovados no sistema'
    
    def handle(self, *args, **options):
        self.stdout.write('üîç VERIFICANDO T√âCNICOS NO SISTEMA')
        self.stdout.write('=' * 50)
        
        # Verificar todos os t√©cnicos
        all_technicians = User.objects.filter(user_type='technician')
        self.stdout.write(f'üë• TOTAL DE T√âCNICOS: {all_technicians.count()}')
        
        for tech in all_technicians:
            status = []
            if tech.is_active:
                status.append('‚úÖ Ativo')
            else:
                status.append('‚ùå Inativo')
                
            if tech.is_approved:
                status.append('‚úÖ Aprovado')
            else:
                status.append('‚ùå N√£o aprovado')
            
            self.stdout.write(f'   - {tech.get_full_name()} ({tech.email})')
            self.stdout.write(f'     Status: {" | ".join(status)}')
        
        # Verificar t√©cnicos que aparecer√£o no formul√°rio
        form_technicians = User.objects.filter(
            user_type='technician', 
            is_approved=True, 
            is_active=True
        )
        
        self.stdout.write(f'\nüéØ T√âCNICOS DISPON√çVEIS NO FORMUL√ÅRIO: {form_technicians.count()}')
        
        if form_technicians.exists():
            for tech in form_technicians:
                self.stdout.write(f'   ‚úÖ {tech.get_full_name()} ({tech.email})')
        else:
            self.stdout.write('   ‚ö†Ô∏è NENHUM t√©cnico dispon√≠vel para o formul√°rio!')
            self.stdout.write('   üí° Para resolver:')
            self.stdout.write('      1. Certifique-se que existe pelo menos um usu√°rio com user_type="technician"')
            self.stdout.write('      2. Certifique-se que este usu√°rio tem is_approved=True')
            self.stdout.write('      3. Certifique-se que este usu√°rio tem is_active=True')
        
        self.stdout.write('\n' + '=' * 50)
        self.stdout.write('‚úÖ VERIFICA√á√ÉO CONCLU√çDA')